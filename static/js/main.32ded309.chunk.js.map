{"version":3,"sources":["Artist.js","Track.js","Header.js","MusicMaster.js","Jokes.js","Testing.js","WeatherApp.js","serviceWorker.js","index.js"],"names":["Artist","artist","images","name","followers","genres","total","style","textTransform","join","src","url","alt","height","width","borderRadius","objectFit","Track","state","playing","audio","playPreviewUrl","playAudio","previewUrl","Audio","pause","setState","play","tracks","this","props","map","track","id","album","preview_url","key","onClick","className","Component","Header","style1","display","margin","marginBottom","to","API_ADDRESS","MusicMaster","artistQuery","time","Date","toLocaleString","updatedArtisQuery","event","target","value","handlekey","searchArtist","fetch","then","Response","json","artists","items","catch","error","alert","message","intervalID","setInterval","tick","clearInterval","onChange","onKeyPress","placeholder","Joke","joke","setup","punchline","Jokes","jokes","fetchJokes","response","DEFAULT_QUERY","PATH_BASE","SORTS","NONE","list","TITLE","sortBy","AUTHOR","COMMENTS","reverse","POINTS","URL","console","log","Testing","results","searchKey","searchTerm","isLoading","sortKey","removeItem","bind","searchField","fetchTopStories","setTopStories","onSubmit","onSort","page","result","e","hits","oldHits","updatedHits","A","updatedList","filter","item","objectID","checkTopStories","preventDefault","Search","input","focus","children","FormGroup","textAlign","fontWeight","border","ref","node","align","type","Table","href","title","author","num_comments","points","Button","button","Sort","Loading","WeatherApp","temperature","undefined","city","country","humidity","description","getWeaherdata","a","City","elements","Country","api_call","data","main","temp","sys","weather","Boolean","window","location","hostname","match","ReactDOM","render","basename","history","createBrowserHistory","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.32ded309.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Artist = ({artist}) => {\r\n if (!artist) return null;   \r\n const {images,name,followers,genres} = artist;\r\n return (\r\n     \r\n     <div>\r\n         <h2>{name}</h2>\r\n         <p>{followers.total} followers</p>\r\n         <p style={{textTransform: 'capitalize'}}> Genres: {genres.join(', ')}</p>\r\n         <img \r\n          src={images[0] && images[0].url}\r\n          alt='artist-portfolio'\r\n          style={{height:200,width:200,borderRadius:100,objectFit:'cover'}}\r\n          />\r\n     </div>\r\n )\r\n}\r\n\r\nexport default Artist;","import React, {Component} from 'react';\r\n\r\nclass Track extends Component{\r\n    state = {\r\n        playing:false,\r\n        audio : null,\r\n        playPreviewUrl:null\r\n    }\r\n    playAudio = previewUrl => () => {\r\n        const audio = new Audio(previewUrl);\r\n        if(!this.state.playing){\r\n        audio.play();\r\n        this.setState({playing:true,audio,playPreviewUrl:previewUrl});\r\n        }\r\n        else {\r\n            this.state.audio.pause();\r\n            if(this.state.playPreviewUrl === previewUrl){\r\n            this.setState({playing:false});\r\n             }\r\n            else {\r\n                audio.play();\r\n                this.setState({audio,playPreviewUrl:previewUrl})\r\n            } \r\n            }\r\n    }\r\n    render(){\r\n        const {tracks} = this.props;\r\n        return (\r\n           \r\n               <div>\r\n                   {\r\n                      tracks.map(track => {\r\n                      const {id,name,album,preview_url} = track;\r\n                      return(\r\n                          <div key={id} onClick={this.playAudio(preview_url)} className=\"track\">\r\n                            <img src={album.images[0].url} alt='track-img' className='track-img'></img>\r\n                            <p className='track-text'>{name}</p>\r\n                          </div>\r\n                      )\r\n                      })\r\n                        \r\n                   }\r\n               </div>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nexport default Track;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nconst Header =() =>{\r\n    const style1 ={\r\n     display:'inline-block',\r\n     margin:10,\r\n     marginBottom: 30 \r\n    };\r\nreturn(\r\n<div>\r\n<h4 style={style1}><Link to='/'>News App</Link></h4>\r\n<h4 style={style1}><Link to='/jokes'>Jokes</Link></h4>\r\n<h4 style={style1}><Link to='/musicmaster'>Music Master</Link></h4>\r\n<h4 style={style1}><Link to='/weatherapp'>Weather App</Link></h4>\r\n</div>\r\n)\r\n}\r\nexport default Header;","import React,{Component} from 'react';\r\nimport Artist from './Artist';\r\nimport Track from './Track'\r\nimport Header from './Header'\r\nconst API_ADDRESS = 'https://spotify-api-wrapper.appspot.com';\r\n\r\nclass MusicMaster extends Component{\r\n  state={\r\n    artistQuery:'',\r\n    artist:null,\r\n    tracks:[],\r\n    time: new Date().toLocaleString()\r\n  }\r\n  updatedArtisQuery = event => {\r\n    this.setState({\r\n      artistQuery:event.target.value\r\n      });   \r\n  }\r\n  handlekey = event=> {\r\n    if(event.key === 'Enter'){\r\n      this.searchArtist();\r\n    }\r\n  }\r\n  \r\n  searchArtist = () => {      \r\n      fetch(`${API_ADDRESS}/artist/${this.state.artistQuery}`)\r\n      .then(Response => Response.json())\r\n      .then(json => {\r\n          if(json.artists.total > 0){\r\n          const artist = json.artists.items[0];\r\n          this.setState({artist});\r\n          fetch(`${API_ADDRESS}/artist/${artist.id}/top-tracks`)\r\n          .then(Response => Response.json())\r\n          .then(json => {\r\n              this.setState ({\r\n                  tracks:json.tracks\r\n              });\r\n          })\r\n          .catch(error=>alert(error.message))\r\n        }\r\n        \r\n    })\r\n    .catch(error =>alert(error.message))\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.intervalID = setInterval(\r\n      () => this.tick(),\r\n      1000\r\n    );\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.intervalID);\r\n  }\r\n\r\ntick() {\r\n  this.setState({\r\n    time: new Date().toLocaleString()\r\n  });\r\n}\r\n   render(){\r\n    \r\n     return(\r\n         <div className='btns'>\r\n           <Header/>\r\n        <h1 className='musicMaster'>Music Master</h1>\r\n        <p>{this.state.time}</p>\r\n        <input\r\n        className='search'\r\n        onChange={this.updatedArtisQuery}\r\n        onKeyPress={this.handlekey}\r\n        placeholder={\"Enter your favourite artist\"}\r\n        />\r\n        <button onClick={this.searchArtist}>Search</button>\r\n         <Artist artist={this.state.artist} />\r\n         <Track tracks={this.state.tracks}/>\r\n         </div>\r\n           )\r\n     }\r\n\r\n}\r\n\r\nexport default MusicMaster;\r\n","import React, {Component} from 'react';\r\nimport Header from './Header';\r\n\r\nconst Joke = ({joke}) => {\r\nconst { setup,punchline} = joke;\r\nreturn <p>{setup} <em>{punchline}</em></p>\r\n}\r\n\r\nclass Jokes extends Component{\r\nstate={    \r\n    joke:{},jokes :[]\r\n}\r\nfetchJokes=()=>{\r\n    fetch('https://official-joke-api.appspot.com/random_ten')\r\n    .then(response => response.json())\r\n    .then(json => this.setState({\r\n        jokes:json\r\n    }))\r\n    .catch(error => alert(error.message))\r\n}\r\ncomponentDidMount(){\r\n    fetch('https://official-joke-api.appspot.com/random_joke')\r\n    .then(response => response.json())\r\n    .then(json=>this.setState({\r\n        joke:json\r\n    }))\r\n    .catch(error => alert(error.message));\r\n}\r\n\r\nrender(){\r\n    return(\r\n        <div className='btns'><Header />\r\n        <div className='jumbotron'>\r\n            \r\n            <h2>Highlighted Joke of the day</h2>\r\n            <Joke joke={this.state.joke}/><hr/>\r\n            <button onClick={this.fetchJokes}>Load more</button>\r\n            {this.state.jokes.map(joke =>(<Joke key={joke.id} joke={joke}/>))}\r\n        </div></div>\r\n           )\r\n}\r\n}\r\nexport default Jokes;","import React,{ Component } from 'react';\r\nimport {FormGroup} from 'react-bootstrap';\r\nimport {sortBy} from 'lodash';\r\nimport Header from './Header'\r\n\r\nconst DEFAULT_QUERY='';\r\nconst DEFAULT_PAGE = 0;\r\nconst DEFAULT_HPP =100;\r\nconst PARAM_HPP ='hitsPerPage='\r\nconst PATH_BASE ='https://hn.algolia.com/api/v1';\r\nconst PATH_SEARCH ='/search';\r\nconst PARAM_SEARCH ='query=';\r\nconst PARAM_PAGE = 'page=';\r\nconst SORTS  = {\r\n  NONE : list => list,\r\n  TITLE:list => sortBy(list,'title'),\r\n  AUTHOR: list => sortBy(list,'author'),\r\n  COMMENTS: list => sortBy(list,'num_comments').reverse(),\r\n  POINTS: list => sortBy(list,'points').reverse()\r\n} \r\nconst URL=`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${DEFAULT_QUERY}&${PARAM_PAGE}&${PARAM_HPP}${DEFAULT_HPP}`;\r\nconsole.log(URL);\r\n\r\n\r\n/*function letMeSearch(searchTerm){\r\n    return function(item){\r\n        return !searchTerm || item.title.toLowerCase().includes(searchTerm.toLowerCase());\r\n    }\r\n}*/\r\n\r\n\r\nclass Testing extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            results:null,    \r\n            searchKey:'',      \r\n            searchTerm: DEFAULT_QUERY,\r\n            isLoading:false,\r\n            sortKey:'NONE'\r\n        }\r\n        \r\n        this.removeItem = this.removeItem.bind(this);\r\n        this.searchField =this.searchField.bind(this);\r\n        this.fetchTopStories=this.fetchTopStories.bind(this);\r\n        this.setTopStories=this.setTopStories.bind(this);\r\n        this.onSubmit= this.onSubmit.bind(this);\r\n        this.onSort = this.onSort.bind(this);\r\n    }\r\n    onSort(sortKey){\r\n     this.setState({sortKey});\r\n    }\r\n    fetchTopStories(searchTerm,page)\r\n    {\r\n      this.setState({isLoading:true});\r\n     fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`)\r\n     .then(response => response.json())\r\n     .then(result=>this.setTopStories(result))\r\n     .catch(e => e);     \r\n    } \r\n    checkTopStories(searchTerm)\r\n    {\r\n     return !this.state.results[searchTerm];\r\n    }\r\n    setTopStories(result)\r\n    {\r\n        const {hits,page} = result;\r\n        const {searchKey,results} = this.state;\r\n        //const oldHits = page !== 0 ? this.state.result.hits:[];\r\n        const oldHits = results && results[searchKey] ? results[searchKey].hits : [];\r\n        const updatedHits  = [...oldHits,...hits];\r\n        this.setState({results: {...results,[searchKey]:{hits:updatedHits,page}},isLoading:false});\r\n        \r\n    }\r\n    removeItem(A)\r\n    {        \r\n        const {searchKey,results} = this.state;\r\n        const {hits,page} = results[searchKey];\r\n        const updatedList = hits.filter(item => item.objectID !== A);        \r\n        //this.setState({result:updatedList}); \r\n        //this.setState({result: {...this.state.result},hits: updatedList}); \r\n        //this.setState({result: Object.assign({},this.state.result,{hits: updatedList})});\r\n         this.setState({results: {...results,[searchKey]: {hits: updatedList,page}}});\r\n    }\r\n    searchField(event){\r\n        this.setState({searchTerm: event.target.value})\r\n    }\r\n    componentDidMount(){\r\n      \r\n      const {searchTerm} = this.state;\r\n        this.setState({searchKey: searchTerm});\r\n        this.fetchTopStories(searchTerm, DEFAULT_PAGE);\r\n    }\r\n    onSubmit(event){\r\n      const {searchTerm} = this.state;\r\n      if(this.checkTopStories(searchTerm)){\r\n        this.fetchTopStories(this.state.searchTerm,DEFAULT_PAGE);\r\n      }\r\n      this.setState({searchKey: searchTerm});\r\n      \r\n      event.preventDefault(); \r\n    }\r\n    render(){ \r\n           const{results,searchTerm,searchKey,isLoading,sortKey} = this.state;\r\n           const page = (results && results[searchKey] && results[searchKey].page) || 0 ;\r\n           const list = (results && results[searchKey] && results[searchKey].hits) || [] ;\r\n           //if (!result){return null;}\r\n           return (\r\n               \r\n               <div className=\"btns\" >\r\n                 <Header />\r\n                  <div className=\"jumbotron fluid\">\r\n                  <Search\r\n                    onChange={ this.searchField } \r\n                    value={ searchTerm }\r\n                    onSubmit={this.onSubmit}\r\n                  >NEWSAPP</Search>      \r\n                  </div> \r\n              { results && <Table \r\n                              list={ list }\r\n                              sortKey = {sortKey}\r\n                              onSort = {this.onSort}\r\n                              searchTerm={ searchTerm }\r\n                              removeItem={ this.removeItem }\r\n                           />\r\n              }\r\n           \r\n            {isLoading ? <Loading/> :\r\n            <Button\r\n            className= 'btn btn-success'\r\n            onClick={() => this.fetchTopStories(searchTerm,page + 1)}\r\n            >Load more</Button>}\r\n            </div>\r\n          )\r\n    }\r\n}\r\nclass Search extends Component{\r\n    componentDidMount(){\r\n      this.input.focus();\r\n    }\r\n    render(){\r\n        const {onChange,value,children,onSubmit} = this.props;\r\n       \r\n        return  (<form onSubmit={onSubmit}>\r\n                 <FormGroup>\r\n                 <h1 style={{textAlign: \"center\",fontWeight:'bold'}}>{ children }</h1><hr  style={{border:'2px solid black',width:'100px'}}/>\r\n                 <div  >\r\n\r\n                 <input  className='searchBtn' onChange={onChange} ref={(node) => {this.input=node}}  value={value} />\r\n                 <span className='input-group-btn' style={{align:'center'}}>\r\n                   <Button \r\n                     className=\"btn btn-primary\"\r\n                     type=\"submit\"\r\n                   >Search\r\n                   </Button>\r\n                 </span>\r\n\r\n                 </div>\r\n                 </FormGroup>                \r\n                 </form>)\r\n    }\r\n}\r\nconst Table = ({ list, searchTerm, removeItem,sortKey,onSort }) => {\r\n    return(\r\n      \r\n        <div>\r\n          <div>\r\n      <Sort sortKey={'TITLE'} onSort={onSort}>\r\n         Title\r\n      </Sort>\r\n      <Sort sortKey={'AUTHOR'} onSort={onSort}>\r\n         Author\r\n      </Sort>\r\n      <Sort sortKey={'COMMENTS'} onSort={onSort}>\r\n         Comments\r\n      </Sort>\r\n      <Sort sortKey={'POINTS'} onSort={onSort}>\r\n         Points\r\n      </Sort>\r\n      \r\n      </div>\r\n          {\r\n              //list.filter(letMeSearch(searchTerm) ).map(item =>   \r\n                SORTS[sortKey](list).map(item =>  \r\n                <div key={ item.objectID }>\r\n                  <h1>\r\n                    <a target='_blank' href={ item.url }>\r\n                      { item.title }</a> \r\n                  </h1>\r\n                  <h4>\r\n  \r\n                    { item.author } | { item.num_comments } Comments | { item.points } Points\r\n                  \r\n                  <Button    \r\n                    className='btn btnleft'                \r\n                    type=\"button\"\r\n                    onClick={ () => removeItem(item.objectID) }>\r\n                      Remove me\r\n                  </Button>\r\n  \r\n                  </h4> <hr />\r\n  \r\n                </div>\r\n              )\r\n            }\r\n        </div>\r\n      )\r\n  }\r\nclass Button extends Component{\r\n    render(){  \r\n        const {onClick,button,children,className} = this.props;\r\n        return (          \r\n            <button \r\n            className={className}\r\n            onClick={ onClick } \r\n            type={button}>\r\n            {children}\r\n            </button>\r\n               )\r\n            }\r\n}\r\nconst Sort = ({sortKey,onSort,children}) => <Button\r\nonClick = {()=>onSort(sortKey)}\r\n>\r\n  {children}\r\n</Button> \r\nconst Loading = ()=> <div><h2>Loading...</h2></div>\r\nexport default Testing;","import React,{ Component } from 'react';\r\nimport Header from './Header'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './WeatherCss.css'\r\nclass WeatherApp extends Component{\r\n    state={\r\n        temperature:undefined,\r\n        city:undefined,\r\n        country:undefined,\r\n        humidity:undefined,\r\n        description:undefined,\r\n        error:undefined\r\n    }\r\n    getWeaherdata = async(e) => {\r\n        e.preventDefault();\r\n        const City = e.target.elements.city.value;\r\n        const Country = e.target.elements.country.value;\r\n        const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${City},${Country}&APPID=b7aaa3a349294d5706002e82df3de1ea&units=metric`);\r\n        const data = await api_call.json();\r\n        console.log(data);\r\n        if(City && Country)\r\n        {\r\n        this.setState({\r\n        temperature:data.main.temp,\r\n        city:data.name,\r\n        country:data.sys.country,\r\n        humidity:data.main.humidity,\r\n        description:data.weather[0].description,\r\n        error:\"\"\r\n        });\r\n    }\r\n        else{\r\n            this.setState({\r\n                temperature:undefined,\r\n                city:undefined,\r\n                country:undefined,\r\n                humidity:undefined,\r\n                description:undefined,\r\n                error:'Please enter country and city '\r\n            })\r\n        }\r\n}\r\n\r\n    render(){ return  <div className='btns'>\r\n        <Header />\r\n        <div className='wrapper'>\r\n        <div className='main'>\r\n        <div className='container'>\r\n        <div className='row'>\r\n        <div className='col-5 title-container'>\r\n        <h2 className=\"title-container__title\">Weather Finder</h2>\r\n        <p className=\"title-container__subtitle\">Helps you to find weather of cities</p>\r\n        </div>\r\n        <div className='col-7 form-container weather__info'>\r\n        <form onSubmit={this.getWeaherdata}>\r\n                <input type = 'text' placeholder='Country...' name='country' />\r\n                <input type = 'text' placeholder='City...' name='city' />\r\n                <button>Get Weather</button>\r\n            </form><hr/>\r\n            {this.state.city && this.state.country && <p className='weather__key'>Location: {this.state.city},{this.state.country}</p>}\r\n            {this.state.temperature && <p className='weather__key'>Temperature: {this.state.temperature} deg C</p>}{this.state.description &&\r\n            <p className='weather__key' style={{textTransform: 'capitalize'}}>Description: {this.state.description}</p>}\r\n            {this.state.humidity && <p className='weather__key'>Humidity: {this.state.humidity}</p>}\r\n            {this.state.error && <p className='weather__key'>{this.state.error}</p>}\r\n        </div> \r\n        </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n        \r\n    }    \r\n}\r\n\r\nexport default WeatherApp;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Router,Switch,Route} from 'react-router-dom';\nimport createBrowserHistory from 'history/createBrowserHistory'\nimport MusicMaster from './MusicMaster'\nimport Jokes from './Jokes'\nimport Testing from './Testing';\nimport WeatherApp from './WeatherApp'\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n    <Router basename='/react-apps/' history={createBrowserHistory()}>\n        <Switch>\n            <Route exact path ='/' component={Testing} />\n            <Route path ='/jokes' component={Jokes}/>\n            <Route path ='/musicmaster' component={MusicMaster}/>\n            <Route path='/weatherapp' component={WeatherApp}/>\n            \n        </Switch>\n    </Router>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}